#!/usr/bin/env node

var REV  = '0.0.1',
    HELP = ['usage: genpkg [action] URI TARGET'
         , ''
         , 'Installs the script specified as a NPM package'
         , ''
         , 'actions:'
         , '  install   Copy URI and locate under TARGET directory.'
         , '  update    Update packages from their resources.'
         , ''
         , 'options:'
         , '  version   Show version number and exit'
         , '  help      Show help'].join('\n');


var genpkg = require('../lib/genpkg'),
    index = require('../lib/index'),
    logging = require('../lib/logging'),
    path = require('path'),
    puts = require('sys').puts,
    buildOptions = {};

var opt = require('optimist'),
    argv = opt
    .usage('Usage: $0 [ACTION] [TARGET] [OPTIONS]')
    .options('version',{
      'describe':'Show version and exit'
    })
    .options('help',{
      'describe':'Show help.'
    })
    .argv;

function install(){
  var uri = argv._[1],
      target = argv._[2] || '';

  if(!uri){
    return help();
  }

  genpkg.pkg({ 'uri':uri }, function(error, pkg){
    if(error) throw error;

    pkg.target = path.join(target, pkg.manifest.name);

    genpkg.save(pkg, function(error){
      if(error) throw error;
    });
  });
}

function update(){
  logging.info('Checking for updates...');
  index.contents(function(error, contents){
    if(error) throw error;
    
    var packages = Object.keys(contents);

    (function iter(i){
      
      if(i>=packages.length){
        logging.info('Done.');
        return;
      }

      genpkg.update(packages[i], iter.bind(undefined, i+1));

    })(0);
    
  });
}

function version(){
  puts('genpkg v' + REV);
}

function help(){
  puts(HELP);
}

var action = argv._[0];

switch(action){
  case 'install': install(); break;
  case 'update': update(); break;
  default:
    if(argv.version){
      version();
    } else {
      help();
    }
}
